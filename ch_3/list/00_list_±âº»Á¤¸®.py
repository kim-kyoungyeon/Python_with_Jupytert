# 리스트
# 동일한 이름을 갖는 원소들의 연속 저장 영역
# 여러개의 데이터가 저장되어 있는 장소(집합적 자료형)
# 각 원소는 인덱스로 구분 (인덱스 : 0부터 시작)
# 원소 값 직접 변경 가능 a[0] = 50  *주의! 문자열은 직접 저장 불가
# 생성 : [] 사용

# 리스트 변수명 = [값1, 값2, ...]
scores = [32,45,65,73,34]

# 리스트 특징
# 리스트 크기는 가변적 --- 요소 개수는 정해져 있지 않음.
# 다양한 종류의 데이터를 하나의 리스트 안에 저장 가능
# 리스트 안에 리스트를 저장할 수 있음.
myList = [12,'dog',180.145,[2,3]]
print(myList) #리스트 형태로 출력
print(type(myList)) # <class 'list'>

# 리스트 만들기
ints = [1,2,3,4,5]
myList = [12,'dog',180.145,[2,3]]

print(ints) # [1, 2, 3, 4, 5] : 출력결과 --- 리스트[]
print(myList)

# 리스트 각 원소 출력 --- 각 요소 접근
# 인덱싱을 하거나 반복문을 이용

# 반복문 이용
for i in ints :
    print(i)

# 인덱스 통해서 직접 접근
print(ints[0])

# 반복문에 range() 함수 이용 --- 인덱스 접근
for i in range(0,len(ints)) :
    print(ints[i]) #리스트에 직접 접근

# 리스트의 각 요소를 변수에 저장하고자 할 때
# 리스트의 요소 개수와 저장할 변수의 개수가 동일해야 함
nums = [1,2,3]
# a = nums[0],b = nums[1]
a,b,c = nums #리스트 요소의 각 값을 왼쪽 변수에 순서대로 매핑
print(a,b,c)

# 리스트 nums의 요소값이 3개인데 두개의 변수만 매핑
# d,e = nums
# print(d,e)
# ValueError: too many values to unpack (expected 2) : 리스트의 값이 너무 많아서 변수가 모자람
# unpack : 여러개의 요소들로 이루어진 데이터를 분해하는 과정

# 인덱싱
a = [1,2,3,4,5]
print(a[0]) #첫번째 요소
print(a[-1]) #뒤에서 첫번째 요소(마지막 요소)
print(a[-4]) # 뒤에서 네번째 요소

b = [1,2,3,[4,5]]
print(b[-1]) #[4,5]
print(b[-1][0]) #4

c = [1,2,3,[10,20],4,5]
# 요소 20 값 접근 후 출력
print(c[3][1])

# 리스트로 리스트를 생성
all_list = [a,b,c] #변수를 이용한 리스트 생성
print(all_list)
print(all_list[0][1])
print(all_list[1][3][1])

# 슬라이싱 : 범위 지정해서 접근하는 연산
# 리스트[start:end] : start에서 end-1 요소까지 선택
# 마지막 요소[-1:]

# 리스트 연산
# + : 리스트 합치기
# * : 리스트 반복
# 리스트 내용 변경 : 특정 위치 요소에 값을 저장
# 리스트 합치기 (+)
a = [1,2,3]
b = [4,5,6]
c = a+b # 두개의 리스트 요소를 하나의 리스트로 합친다.
c # [1,2,3,4,5,6]

d = a*3 # a 리스트의 요소를 반복해서 요소로 추가
d # [1,2,3,1,2,3,1,2,3]

# 리스트 내용 변경
a = [1,2,3]
a[2] = 30
a # [1,2,30]

# 리스트 내용 변경 --- 리스트로 변경할 경우
a = [1,2,3]
a[2] = [30,40]
a # [1,2,[30,40]] : 하위 리스트로 생성

# 리스트 내용 변경 : 빈 리스트 저장 --- 내용 삭제
a=[1,2,3,4,5,6]
a[3:5]=[] # 위치값 3,4번의 데이터가 삭제
a # [1, 2, 3, 6]

# Q. a 리스트를 초기화 하시오.
a = []
a