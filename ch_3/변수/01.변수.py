# 파이썬의 변수
# 파이썬의 변수는 값이 저장되어 있는 객체를 참조하는 공간
# 값이 저장된 공간의 주소를 갖고 있음

x = 10
print(x) # x가 참조하는 공간의 값을 출력

y = 20
print(y) # y 변수가 참조하는 공간의 값을 출력

id(y) # y 변수가 참조하고 있는 객체의 주소를 반환

x = y # 물리적 : y의 참조 주소를 y에 저장
      # 논리적 : y의 참조값을 x의 참조값으로 만듦

#------------------------------------------------------------
# 변수참조값의 출력
# print(변수)
# 변수가 가리키는 객체의 값 출력
# Console에서가 아닌 파이참 편집에서는 변수명만으로 출력이 불가능함
x = 10
print(x) # 변수 출력 시에는 반드시 print() 함수 사용할 것

# 변수 참조 메모리 주소 출력
# id(변수)는 변수가 참조하는 메모리의 주소 반환
id(x)
# 1891936320

#--- 변수 주의 사항
# 변수 선언 필요 없음
# 필요한 라인에 변수 만들어서 값 저장하면 됨
# 변수에 저장된 값의 형태에 따라서 실행 시점에 동적으로 type(형)_크기 검사 함
# 동적 할당, 동적 타이핑이라고 함

# 파이썬 변수는 이름이 있다.
# 변수의 자료형이 정해져 있지 않고 다른 값을 저장할 수도 있다.(값 변경 가능)

x = 10
type(x)
# <class 'int'> --- 정수형 변수 x
x = 7.5
type(x)
# <class 'float'> --- 실수형 변수 x
x = 'apple'
type(x)
# <class 'str'> --- 문자형 변수 x

#--- 변수명
# 대소문자 구분
# 영문자와 숫자, 밑줄(_)로 구성
# 변수명 중간에 공백 허용하지 않는다.
# 구분하기 위해서 밑줄을 사용하거나 중간에 대문자(낙타체)로 시작
# 예시1: std_name
# 예시2: stdName
# 예약어는 변수명으로 사용할 수 없다.
# 예약어 : 이미 용도가 정해져(예약된) 있는 단어
# 함수이름이나 변수이름 등의 식별자로 사용할 수 없음

import keyword
print(keyword.kwlist) # 변수명 사용 불가능한 예약어

# 식별자(identifier)
# 변수, 상수, 함수, 사용자 정의 타입 등에서 다른 것과 구분하기 위해 사용되는 이름
# 변수이름, 상수이름, 함수이름, 사용자 정의 타입 이름 등

#-----------------------------------------------------------
# 변수에 값 저장
# 변수 = 값
a = 10

# 여러개의 변수에 여러개의 값 저장
# 형식: 변수1, 변수2, 변수3, 변수4 = 값1, 값2, 값3, 값4
a,b,x,y = 1,2,3,4

# 여러개의 변수에 한 개의 값 저장
# 변수1 = 변수2 = 변수3 = 값(상수)
a = b = c = 10

#---------------------------------------------- 두 변수의 값 교환
a = 10
b = 20
# a의 값은 b로 b의 값은 a로 교환하시오.
# 잘못된 코드(a,b 모두에 같은 값이 저장)
b = a
a = b
print(a,b)

# temp라는 다른 변수를 이용
temp = a
a = b
b = temp
print(a,b)

# Python의 두 변수 값 교환(temp 변수 사용 x)
a = 10
b = 20
a, b = b, a
print(a,b)

# 변수는 메모리공간을 할당하기 때문에 사용하지 않으면 삭제해야 함
# 변수 삭제
# del 명령어 사용
# del 변수명
del a
print(a)
# NameError: name 'a' is not defined








